import{_ as n,o as a,c as l,b as p}from"./app.911c061f.js";const E=JSON.parse('{"title":"Docker","description":"","frontmatter":{"layout":"doc","title":"Docker"},"headers":[{"level":2,"title":"镜像操作","slug":"镜像操作","link":"#镜像操作","children":[]},{"level":2,"title":"容器操作命令","slug":"容器操作命令","link":"#容器操作命令","children":[]},{"level":2,"title":"docker-compose(配置文件)","slug":"docker-compose-配置文件","link":"#docker-compose-配置文件","children":[]},{"level":2,"title":"docker-build","slug":"docker-build","link":"#docker-build","children":[]},{"level":2,"title":"容器日志和状态","slug":"容器日志和状态","link":"#容器日志和状态","children":[]}],"relativePath":"interview/docker.md"}'),o={name:"interview/docker.md"};function e(c,s,r,t,i,y){return a(),l("div",null,s[0]||(s[0]=[p(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-hidden="true">#</a></h1><h2 id="镜像操作" tabindex="-1">镜像操作 <a class="header-anchor" href="#镜像操作" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">search</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">IMAGE_NAME</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 查询Docker Hub的镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">IMAGE_NAME:Tag</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">#从Docker Hub下载镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">images</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 列出本地存在的镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">IMAGE_NAME</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 删除本地的一个或多个镜像</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="容器操作命令" tabindex="-1">容器操作命令 <a class="header-anchor" href="#容器操作命令" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">IMAGE_NAME</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/bin/bash</span><span style="color:#BABED8;">   </span><span style="color:#676E95;font-style:italic;"># 在新容器中运行交互式shell</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/bin/bash</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 在运行中的容器中执行交互式shell</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 列出正在运行的容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-a</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 列出所有容器，包括停止的</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-aq</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 列出所有容器的容器id</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">start</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 启动一个容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 停止运行容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> ps -aq</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 停止所有运行的容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 删除一个容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> ps -aq</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 删除所有容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 重启一个容器</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="docker-compose-配置文件" tabindex="-1">docker-compose(配置文件) <a class="header-anchor" href="#docker-compose-配置文件" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">up</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 在后台运行</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">down</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 停止并移除所有在配置文件中定义的服务</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 查看当前正在运行的服务状态</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 查看服务日志</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">service-nam</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">comman</span><span style="color:#BABED8;">d</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 在正在运行的容器中执行命令</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 构建配置文件中定义的所有服务镜像</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="docker-build" tabindex="-1">docker-build <a class="header-anchor" href="#docker-build" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">container-name</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># &lt;镜像名称&gt;是镜像指定的名称。句点（.）表示使用当前目录作为构建上下文。</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-name=</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">容器名称</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">镜像名</span><span style="color:#BABED8;">称</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="容器日志和状态" tabindex="-1">容器日志和状态 <a class="header-anchor" href="#容器日志和状态" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># -f 实时跟踪容器日志输出  </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --tail 10 显示最近10条日志  </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--tail</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --since -- until 指定显示日志的时间范围 </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--since=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2023-08-01</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --tail 10 显示最近10条日志  </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">inspect</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">top</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">CONTAINER_ID</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,11)]))}const D=n(o,[["render",e]]);export{E as __pageData,D as default};
